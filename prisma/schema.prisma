// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  user
  admin
}

model User {
  user_id      Int      @id @default(autoincrement())
  username     String   @unique @db.VarChar(255)
  email        String   @unique @db.VarChar(255)
  password_hash String  @db.VarChar(255)
  role         UserRole @default(user)
  first_name   String?  @db.VarChar(255)
  last_name    String?  @db.VarChar(255)
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  // Relations
  sessions Session[]

  @@map("Users")
}

model Session {
  session_id String   @id @db.VarChar(128)
  user_id    Int?
  expires    DateTime
  data       String?  @db.Text
  created_at DateTime @default(now())

  // Relations
  user User? @relation(fields: [user_id], references: [user_id], onDelete: Cascade)

  @@map("Sessions")
}

model Event {
  event_id            Int     @id @default(autoincrement())
  event_name          String  @db.VarChar(255)
  event_type          String  @db.VarChar(255)
  event_location      String  @db.VarChar(255)
  event_date          DateTime @db.Date
  event_description   String  @db.Text
  menu_title          String  @db.VarChar(255)
  menu_image_filename String  @db.VarChar(255)

  // Relations
  photos Photo[]

  @@map("events")
}

model Photo {
  photo_id         Int      @id @default(autoincrement())
  event_id         Int
  filename         String   @db.VarChar(255)
  original_filename String? @db.VarChar(255)
  description      String?  @db.Text
  caption          String?  @db.Text
  taken_date       DateTime @default(now())
  file_size        Int?
  mime_type        String?  @db.VarChar(100)
  file_data        String?  @db.Text
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt

  // Relations
  event Event @relation(fields: [event_id], references: [event_id], onDelete: Cascade)

  @@map("Photos")
}